#summary 核心模块介绍

= core::init =

(CoreMVC 1.0)

core::init - 初始化配置

----

== 说明 ==

  array *core::init* `( [ array $config = null [, mixed &$variable = null ] ] )`
  ----
  array *core::init* `( string $filename [, mixed &$variable = null ] )`
  ----
  mixed *core::init* `( string $attribute [, mixed &$variable = null ] )`
  ----
  mixed *core::init* `( array $attributes [, mixed &$variable = null ] )`
  ----
  array *core::init* `( bool $clear [, mixed &$variable = null ] )`
  ----
  该方法可以通过关联数组配置，可以通过导入文件配置，可以清空配置，在配置的同时触发相应的函数。该方法提供通过属性名称取得属性值。该方法还可以针对某个变量进行配置，而不仅限于核心模块。

== 参数 ==

  _config_
    当前要配置的关联数组，数组下标为属性名称，数组值为属性值。如果传入的是空值也会重新初始化。
  _filename_
    当前要导入的配置文件。文件名必须以“.php”和“.ini”结尾，否则被视为属性名称。
  _attribute_
    要取得属性值的属性名称，如果该属性名称不存在则返回空串。
  _variable_
    当前需要配置的变量，默认是核心模块。
  _clear_
    是否要完全清空当前配置，如果是则清空为空数组，如果否则完全不变，并且不会触发相应的函数。此参数多用于框架和调试。

== 返回值 ==

  如果传入属性名称则返回属性值，未找到时返回空串。其他情况下都会返回配置数组。

== 修改日志 ==

||版本||描述||
||1.3.2||通过第一个参数为数组时取多个配置的方法。||
||1.3||||
||1.2||将第二个参数修改为传址变量，可对此变量进行初始化。||
||1.1||新增 $class_name 参数，$level 改为1-5级并且正数取值负数赋值。||

== 范例 ==